# __________________ обращение по индексу __________________
print('__ обращение по индексу __')

# В списках можно также обращаться к элементам по индексу
# Что такое индекс? Это порядковый номер элемента.
# Порядковые номера элементов в программировании начинаются с 0!

example_list = ['первый элемент', 'второй элемент', 'третий элемент', 'четвертый элемент']
# Обращаясь по индексу, мы после нужной переменной пишем в квадратных скобках индекс элемента, который нам нужен
# Выведем, например, второй элемент из списка, лежащего в переменной example_list
print(example_list[1])
# Теперь выведем первый элемент
print(example_list[0])

# Можно, кстати, обратиться к элементу прямо сразу после создания итерируемого объекта
print([1, 2, 3][1])
# В данном случае первые квадратные скобки нужны для создания списка, а вторые для обращения к элементу
# Только в этом мало смысла, потому что можно было просто написать print(2), и было бы ровно тоже самое

# А вот когда скобки используются для обращения к многомерным структурам - в этом смысла хоть отбавляй
list1 = [1, 2, 3, 4, 5]
list2 = [6, 7, 8, 9, 10]
super_list = [list1, list2]
print(super_list[1][2])
# В данном случае первые скобки служат для обращения к списку list2, так как он лежит в super_list по индексу 1
# А вторые скобки служат для обращения уже к элементу 3 в этом списке

# Важно запомнить логику обращения к элементам по индексу. Еще раз: индексирование в программировании начинается с 0!
